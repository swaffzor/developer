# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
# version: 2
# jobs:
  # build:
  #   docker:
  #     # specify the version you desire here
  #     - image: circleci/php:7.1-browsers
      
  #     # Specify service dependencies here if necessary
  #     # CircleCI maintains a library of pre-built images
  #     # documented at https://circleci.com/docs/2.0/circleci-images/
  #     # - image: circleci/mysql:9.4

  #   working_directory: ~/repo

  #   steps:
  #     - checkout

  #     # Download and cache dependencies
  #     - restore_cache:
  #         keys:
  #         - v1-dependencies-{{ checksum "composer.json" }}
  #         # fallback to using the latest cache if no exact match is found
  #         - v1-dependencies-

  #     - run: composer install -n --prefer-dist

  #     - save_cache:
  #         paths:
  #           - ./vendor
  #         key: v1-dependencies-{{ checksum "composer.json" }}
        
  #     # run tests!
  #     - run: phpunit

version: 2
jobs:
  one:
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run: echo "A first hello"
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output      
  build:
    docker:
        - image: circleci/node:8.10.0
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: project
          # Must be relative path from root
          # paths:
          #   - * 

  deploy:
      machine:
        enabled: true
      steps:
        - attach_workspace:
          at: project
        - run:
            name: Deploy Over SSH to Staging
            command: |
              scp -r -P 2222 /project/* swafford@192.254.232.54:/public_html/staging

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # filters:
          #   branches:
          #     only: development