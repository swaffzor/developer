version: 2
jobs:    
  build:
    docker:
        - image: circleci/node:8.10.0
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

  deploy-dev:
      machine:
        enabled: true
      steps:
        - checkout
        - run:
            name: Deploy Over SSH to Staging
            command: |
              scp -r -P 2222 ~/project/* swafford@192.254.232.54:/home2/swafford/public_html/dev

  deploy-staging:
      machine:
        enabled: true
      steps:
        - checkout
        - run:
            name: Deploy Over SSH to Staging
            command: |
              scp -r -P 2222 ~/project/* swafford@192.254.232.54:/home2/swafford/public_html/staging

  deploy-prod:
      machine:
        enabled: true
      steps:
        - checkout
        - run:
            name: Deploy Over SSH to Staging
            command: |
              scp -r -P 2222 ~/project/* swafford@192.254.232.54:/home2/swafford/public_html/prod # todo: remove /prod when ready to actually deploy to prod

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters: # don't need to deploy to dev again on pr merge
            branches:
              ignore: development
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: development
      - hold-prod:
          type: approval
          requires: 
            - build
          filters:
            branches:
              only: development
      - deploy-prod:
          requires:
            - hold-prod
          filters:
            branches:
              only: development